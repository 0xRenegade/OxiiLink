use axum::http::{header::HeaderName, HeaderMap};
use lazy_static::lazy_static;
use regex::RegexSet;

pub fn isbot(headers: &HeaderMap) -> bool {
    match headers.get(HeaderName::from_static("user-agent")) {
        Some(h_uagent) => {
            if let Ok(uagent) = h_uagent.to_str() {
                BOTREGEX.is_match(uagent)
            } else {
                true
            }
        }
        None => true,
    }
}

lazy_static! {
    pub static ref BOTREGEX: RegexSet = RegexSet::new([
        r"bot",
        r" daum[ /]",
        r" deusu/",
        r"(?:^| )site",
        r"@[a-z]",
        r"\(at\)[a-z]",
        r"\(github\.com/",
        r"\[at\][a-z]",
        r"^12345",
        r"^<",
        r"^[\w \.\-\(\)]+(/v?\d+(\.\d+)?(\.\d{1,10})?)?$",
        r"^[^ ]{50,}$",
        r"^active",
        r"^ad muncher",
        r"^anglesharp/",
        r"^anonymous",
        r"^avsdevicesdk/",
        r"^axios/",
        r"^bidtellect/",
        r"^biglotron",
        r"^custom",
        r"^ddg[_-]android",
        r"^discourse",
        r"^dispatch/\d",
        r"^downcast/",
        r"^duckduckgo",
        r"^facebook",
        r"^fdm[ /]\d",
        r"^getright/",
        r"^gozilla/",
        r"^hatena",
        r"^hobbit",
        r"^hotzonu",
        r"^hwcdn/",
        r"^jeode/",
        r"^jetty/",
        r"^jigsaw",
        r"^linkdex",
        r"^lwp[-: ]",
        r"^metauri",
        r"^microsoft bits",
        r"^movabletype",
        r"^mozilla/\d\.\d \(compatible;?\)$",
        r"^mozilla/\d\.\d \w*$",
        r"^navermailapp",
        r"^netsurf",
        r"^offline explorer",
        r"^phantom",
        r"^php",
        r"^postman",
        r"^postrank",
        r"^python",
        r"^read",
        r"^reed",
        r"^restsharp/",
        r"^snapchat",
        r"^space bison",
        r"^svn",
        r"^swcd ",
        r"^taringa",
        r"^test certificate info",
        r"^thumbor/",
        r"^tumblr/",
        r"^user-agent:mozilla",
        r"^valid",
        r"^venus/fedoraplanet",
        r"^w3c",
        r"^webbandit/",
        r"^webcopier",
        r"^whatsapp",
        r"^xenu link sleuth",
        r"^yahoo",
        r"^yandex",
        r"^zdm/\d",
        r"^zoom marketplace/",
        r"adbeat\.com",
        r"appinsights",
        r"archive",
        r"ask jeeves/teoma",
        r"bit\.ly/",
        r"bluecoat drtr",
        r"browsex",
        r"burpcollaborator",
        r"capture",
        r"catch",
        r"check",
        r"chrome-lighthouse",
        r"chromeframe",
        r"client",
        r"cloud",
        r"crawl",
        r"dareboost",
        r"datanyze",
        r"dataprovider",
        r"dejaclick",
        r"dmbrowser",
        r"download",
        r"evc-batch/",
        r"feed",
        r"firephp",
        r"freesafeip",
        r"ghost",
        r"gomezagent",
        r"google",
        r"headlesschrome/",
        r"http",
        r"httrack",
        r"hubspot marketing grader",
        r"hydra",
        r"ibisbrowser",
        r"images",
        r"iplabel",
        r"ips-agent",
        r"java",
        r"library",
        r"mail\.ru/",
        r"manager",
        r"monitor",
        r"morningscore/",
        r"neustar wpm",
        r"news",
        r"nutch",
        r"offbyone",
        r"optimize",
        r"pageburst",
        r"pagespeed",
        r"perl",
        r"pingdom",
        r"powermarks",
        r"preview",
        r"proxy",
        r"ptst[ /]\d",
        r"reader",
        r"rexx;",
        r"rigor",
        r"rss",
        r"scan",
        r"scrape",
        r"search",
        r"server",
        r"sogou",
        r"sparkler/",
        r"spider",
        r"statuscake",
        r"stumbleupon\.com",
        r"supercleaner",
        r"synapse",
        r"synthetic",
        r"taginspector/",
        r"torrent",
        r"tracemyfile",
        r"transcoder",
        r"trendsmapresolver",
        r"twingly recon",
        r"url",
        r"virtuoso",
        r"wappalyzer",
        r"webglance",
        r"webkit2png",
        r"websitemetadataretriever",
        r"whatcms/",
        r"wordpress",
        r"zgrab",
    ])
    .unwrap();
}
